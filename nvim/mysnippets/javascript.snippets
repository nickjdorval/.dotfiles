snippet     pry
abbr        eval(pry.it);
options     head
  eval(pry.it);

snippet     conpry
abbr        const pry = require('pryjs');
options     head
  const pry = require('pryjs');

snippet     fun
abbr        () => {}
options     word
  (${1:arguments}) =>  {
    ${0:TARGET}
  });

###########################
##     Mocha snippets    ##
###########################
snippet desc
abbr    describe
options head
  describe('${1:description}', () =>  {
    ${0:TARGET}
  });

snippet cont
abbr    context
options head
  context('${1:context}', () => {
    ${0:TARGET}
  });

snippet itd
abbr    it..test
options head
  it('${1:test_case}', (${2:arguments}) => {
    ${0:TARGET}
  });

snippet     bef
abbr        before
options     head
  before((${1:arguments}) => {
    ${0:TARGET}
  });

snippet     befe
abbr        beforeEach
options     head
  beforeEach(() => {
      ${0:TARGET}
    });

snippet     aft
abbr        after
options     head
  after(() => {
    ${0:TARGET}
  });

snippet     afte
abbr        afterEach
options     head
  afterEach(() => {
      ${0:TARGET}
    });

snippet    as.
abbr        assert
options     head
  assert${0:TARGET}

snippet     aseq
abbr        assert.equal()
options     word
  assert.equal(${1:actual}, ${2:expected}, '${0:message}');

snippet     asneq
abbr        assert.notEqual()
options     word
  assert.notEqual(${1:actual}, ${2:expected}, '${0:message}');

snippet     asdeq
abbr        assert.deepEqual()
options     word
  assert.deepEqual(${1:actual}, ${2:expected}, '${0:message}');

snippet     asndeq
abbr        assert.notDeepEqual()
options     word
  assert.notDeepEqual(${1:actual}, ${2:expected}, '${0:message}');

snippet     asisa
abbr        assert.isArray()
options     word
  assert.isArray(${1:actual}, '${0:message}');

snippet     asisna
abbr        assert.isNotArray()
options     word
  assert.isNotArray(${1:actual}, '${0:message}');

snippet     asinc
abbr        assert.include()
options     word
  assert.include(${1:haystack}, ${2:needle}, '${0:message}');

snippet     asninc
abbr        assert.notInclude()
options     word
  assert.notInclude(${1:haystack}, ${2:needle}, '${0:message}');

snippet     astru
abbr        assert.isTrue()
options     word
  assert.isTrue(${1:value},'${0:message}');

snippet     asntru
abbr        assert.isNotTrue()
options     word
  assert.isNotTrue(${1:value},'${0:message}');

